{"version":3,"sources":["../../src/routes/rides.js"],"names":["rideCreateSuccess","message","error","status","ridesRouter","express","Router","verifyParameters","req","res","next","parameter","body","destination","takeOffTime","totalSeats","send","get","rideOffers","post","reqBody","newRide","id","push"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,oBAAoB,EAAEC,SAAS,0CAAX,EAA1B;AACA,IAAMC,QAAQ;AACZA,SAAO,EADK;AAEZC,UAAQ;AAFI,CAAd;AAIA,IAAMC,cAAcC,kBAAQC,MAAR,EAApB;AACA,IAAMC,mBAAmB,SAAnBA,gBAAmB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC3C,MAAMC,YAAYH,IAAII,IAAtB;AACA,MAAID,aAAaA,UAAUE,WAAvB,IAAsCF,UAAUG,WAAhD,IAA+DH,UAAUI,UAA7E,EAAyF;AACvFL;AACD,GAFD,MAEO;AACLR,UAAMA,KAAN,GAAc,0CAAd;AACAA,UAAMC,MAAN,GAAe,GAAf;AACAM,QAAIN,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqBd,KAArB;AACD;AACF,CATD;;AAWAE,YAAYa,GAAZ,CAAgB,GAAhB,EAAqB,UAACT,GAAD,EAAMC,GAAN,EAAc;AACjCA,MAAIO,IAAJ,CAASE,oBAAT;AACD,CAFD;;AAIAd,YAAYe,IAAZ,CAAiB,GAAjB,EAAsBZ,gBAAtB,EAAwC,UAACC,GAAD,EAAMC,GAAN,EAAc;AACpD,MAAMW,UAAUZ,IAAII,IAApB;AACA,MAAMS,UAAU;AACdC,QAAI,uBADU;AAEdT,iBAAaO,QAAQP,WAFP;AAGdC,iBAAaM,QAAQN,WAHP;AAIdC,gBAAYK,QAAQL;AAJN,GAAhB;AAMA,MAAIG,qBAAWK,IAAX,CAAgBF,OAAhB,CAAJ,EAA8B;AAC5BZ,QAAIO,IAAJ,CAAShB,iBAAT;AACD,GAFD,MAEO;AACLE,UAAMA,KAAN,GAAc,0BAAd;AACAA,UAAMC,MAAN,GAAe,GAAf;AACAM,QAAIN,MAAJ,CAAW,GAAX,EAAgBa,IAAhB,CAAqBd,KAArB;AACD;AACF,CAfD;;kBAkBeE,W","file":"rides.js","sourcesContent":["import express from 'express';\r\nimport uniqid from 'uniqid';\r\nimport rideOffers from '../models/rideOffers';\r\n\r\nconst rideCreateSuccess = { message: 'Your offer has been successfully created' };\r\nconst error = {\r\n  error: '',\r\n  status: 401,\r\n};\r\nconst ridesRouter = express.Router();\r\nconst verifyParameters = (req, res, next) => {\r\n  const parameter = req.body;\r\n  if (parameter && parameter.destination && parameter.takeOffTime && parameter.totalSeats) {\r\n    next();\r\n  } else {\r\n    error.error = 'Please input all the required parameters';\r\n    error.status = 400;\r\n    res.status(400).send(error);\r\n  }\r\n};\r\n\r\nridesRouter.get('/', (req, res) => {\r\n  res.send(rideOffers);\r\n});\r\n\r\nridesRouter.post('/', verifyParameters, (req, res) => {\r\n  const reqBody = req.body;\r\n  const newRide = {\r\n    id: uniqid(),\r\n    destination: reqBody.destination,\r\n    takeOffTime: reqBody.takeOffTime,\r\n    totalSeats: reqBody.totalSeats,\r\n  };\r\n  if (rideOffers.push(newRide)) {\r\n    res.send(rideCreateSuccess);\r\n  } else {\r\n    error.error = 'An unknown error occured';\r\n    error.status = 500;\r\n    res.status(500).send(error);\r\n  }\r\n});\r\n\r\n\r\nexport default ridesRouter;\r\n"]}